'use strict'
export {OfferViewer}

require('webpack-jquery-ui/draggable');
require('jquery-ui-touch-punch');

var urlencode = require('urlencode');
require('bootstrap');
// require('bootstrap/dist/css/bootstrap.css');
// require('font-awesome/css/font-awesome.css');

import {Dict} from '../dict/dict.js';
const langs = require("../dict/languages");

// var moment = require('moment');

var md5 = require('md5');


import {utils} from "../utils/utils";
import {Profile} from "../profile/profile";
import {Supplier} from "../supplier/supplier";

class OfferViewer {

    constructor(dict){
        this.changed = false;
        this.offer ;
        this.dict = new Dict(dict);

        this.arCat = [];

        this.location = [];

        this.period = $('.sel_period').text();

        this.path  = window.location.origin +"/d2d/";
        if(host_port.includes('nedol.ru'))
            this.path = host_port;

    }


    OpenOffer(offer) {
        let that = this;

        this.ovc = $("#offer_editor").clone();
        this.ovc.attr('id','ovc');
        this.ovc.insertBefore("#offer_editor");
        this.ovc.css('display','block');
        /*transform: scale(0.5) ;*/

        if(screen.width<1000) {
            this.ovc.css('zoom', 0.5);
            this.ovc.css('-moz-transform', 0.5);
        }

        this.ovc.draggable();
        this.ovc.resizable();

        this.ovc.find('.modal-title').text("Delivery for ");
        this.ovc.find('.modal-title').attr('data-translate', md5('Delivery for'));
        this.ovc.find('.modal-title-date').text($('.dt_val')[0].value.split(' ')[0]);

        this.ovc.find('.packing_header').css('display','inline-block');
        this.ovc.find('.price_header').css('display','inline-block');
        this.ovc.find('.markup_header').css('display','inline-block');
        this.ovc.find('.total_header').css('display','inline-block');
        this.ovc.find('.orders_header').css('display','none');
        this.ovc.find('.packing_div').css('display','inline-block');
        this.ovc.find('.price_div').css('display','inline-block');
        this.ovc.find('.markup_div').css('display','inline-block');
        this.ovc.find('.total_div').css('display','inline-block');
        this.ovc.find('.orders_div').css('display','none');

        this.lang = window.sets.lang;
        window.sysdict.set_lang(window.sets.lang,$("#menu_item_tmplt"));
        window.sysdict.set_lang(window.sets.lang,$(this.ovc));

        this.uid = offer.uid;
        this.offer = offer;
        window.supplier = new Supplier();
        window.supplier.profile = new Profile(offer.profile);
        window.supplier.profile.InitSupplierProfile(window.supplier);

        this.date = $('#datetimepicker').data("DateTimePicker").date().format('YYYY-MM-DD');

        $('.dropdown').css('visibility','hidden');
        $('#add_tab_li').css('visibility','hidden');
        $('#add_item').css('visibility','hidden');

        this.dict = new Dict(offer.dict.dict);

        $(".category[state='1']").each(function (i, cat) {
            let tab = cat.title;
            if (!offer.data[tab] || offer.data[tab].length === 0)
                return;
            if ($('[href="#' + tab + '"]').length === 0) {
                $('<li class="tab_inserted"><a data-toggle="tab"  contenteditable="false" data-translate="' + md5(tab) + '"  href="#' + tab + '">' + tab + '</a>' +
                    '</li>').insertBefore($('#add_tab_li'));
                $('<div id="' + tab + '" class="tab-pane fade div_tab_inserted dropdown" style="border: none">' +
                    '</div>').insertBefore($('#add_tab_div'));
            }
        });
        let isEditable = true;

        for (let tab in offer.data) {
            if (!tab)
                continue;
            for (let i in offer.data[tab]) {
                let menu_item = $('#menu_item_tmplt').clone();

                if(window.supplier.uid!==offer.uid) {
                    offer.data[tab][i].supuid = offer.uid;
                    $(menu_item).attr("owner", offer.uid);
                }else{
                    $(menu_item).attr("owner", offer.data[tab][i].owner);
                }
                $(menu_item).attr('id', tab +'_' + i);
                $(menu_item).attr("class", 'menu_item');

                $(menu_item).find(':checkbox').attr('id', 'item_cb_' + i);
                $(menu_item).find(':checkbox').attr('pos', i);
                $(menu_item).find(':checkbox').attr('tab', tab);

                $(menu_item).find('.item_cb').css('visibility', 'visible');

                $(menu_item).find(':checkbox').on('change', this, function (ev) {
                    ev.data.changed = true;
                });

                $(menu_item).find('.item_title').attr('contenteditable', false);

                if (offer.data[tab][i].title) {
                    $(menu_item).find('.item_title').attr('data-translate', offer.data[tab][i].title);
                }

                let t = tab;
                window.db.GetOfferTmplt(function (obj) {
                    let title = $(menu_item).find('.item_title').attr('data-translate');
                    if(obj && obj.data[t]){
                        let incl = _.find(obj.data[t],{title:title,owner:offer.data[tab][i].supuid});
                        if(incl && incl.markuplist) {
                            $(menu_item).find(':checkbox').prop('checked', true);
                            $(menu_item).find('.item_markup').attr('markuplist', JSON.stringify(incl.markuplist));
                            $(menu_item).find('.item_markup').val(incl.markuplist[$(menu_item).find('.item_pack').text()]);
                            $(menu_item).find('.item_total').val(parseInt($(menu_item).find('.item_price').val()) + parseInt($(menu_item).find('.item_markup').val()));
                        }else{
                            $(menu_item).find('.item_markup').attr('markuplist', JSON.stringify({}));
                        }
                    }

                });

                $(menu_item).find('.item_markup').attr('markuplist','{}');

                $(menu_item).find('.item_content').attr('id', 'content_' + tab +'_' + i);
                $(menu_item).find('.item_title').attr('data-target', '#content_' + tab +'_' + i);
                $(menu_item).find('.item_title').attr('contenteditable', 'true');

                $(menu_item).find('.content_text').attr('contenteditable', 'true');
                if (offer.data[tab][i].content_text)
                    $(menu_item).find('.content_text').attr('data-translate', offer.data[tab][i].content_text.value);
                if (offer.data[tab][i].content_text)
                    $(menu_item).find('.content_text').css('visibility', 'visible');
                // if (offer.data[tab][i].content_text && offer.data[tab][i].content_text.width)
                //     $(menu_item).find('.content_text').css('width', offer.data[tab][i].content_text.width);

                // if (offer.data[tab][i].content_text && offer.data[tab][i].content_text.left)
                //     $(menu_item).find('.content_text').css('left', offer.data[tab][i].content_text.left);

                if (offer.data[tab][i].img) {
                    $(menu_item).find('.img-fluid').css('visibility', 'visible');
                    //the offer attr
                    $(menu_item).find('.img-fluid').attr('hash',offer.data[tab][i].img.src);
                    $(menu_item).find('.img-fluid').attr('src', that.path+'/images/'+offer.data[tab][i].img.src);
                    // $(menu_item).find('.img-fluid').css('left', offer.data[tab][i].img.left);
                    // $(menu_item).find('.img-fluid').css('top', offer.data[tab][i].img.top ? offer.data[tab][i].img.top : 0);
                    //
                }

                $(menu_item).find('.img-fluid').attr('id', 'img_' + tab + '_' + i);

                let pl = offer.data[tab][i].packlist;
                let markup = "0";
                for (let i in pl) {
                    if (!i)
                        continue;
                    let data = parseInt(pl[i]);

                    pl[i] = data;
                    $(menu_item).find('.dropdown').css('visibility', 'visible');
                    $(menu_item).find('.pack_list').append("<li href='#'><a role='packitem' >" + i + "</a></li>");
                    $(menu_item).find('.item_pack').text(i);
                    $(menu_item).find('.caret').css('visibility', 'visible');
                    $(menu_item).find('.pack_list').addClass('dropdown-menu');
                    $(menu_item).find('.item_pack').attr('data-toggle', 'dropdown');
                    // $(menu_item).find('.item_pack').addClass('dropdown-toggle');
                    $(menu_item).find('.item_pack').attr('pack', i);

                    $(menu_item).find('.item_price').val(data);
                }

                $(menu_item).find('.item_markup').val(markup);
                $(menu_item).find('.item_markup').on('focusout',{that: that,mi:menu_item},(ev)=>{
                    $(menu_item).find('.item_total').val(parseInt($(menu_item).find('.item_price').val())+parseInt(ev.target.value));
                    let markuplist = $(menu_item).find('.item_markup').attr('markuplist');
                    if(markuplist) {
                        markuplist = JSON.parse(markuplist);
                        markuplist[$(menu_item).find('.item_pack').text()] = parseInt(ev.target.value);
                        $(menu_item).find('.item_markup').attr('markuplist', JSON.stringify(markuplist));
                    }
                });

                $(menu_item).find('.item_total').on('focusout', {that: that, mi: $(menu_item)}, function (ev) {
                    $(menu_item).find('.item_markup').val(parseInt(ev.target.value) - parseInt($(menu_item).find('.item_price').val()));
                });

                $(menu_item).find('.item_pack').attr('packlist', JSON.stringify(pl));

                $(menu_item).find('li>a[role=packitem]').on('click', {
                    that: that,
                    mi: $(menu_item)
                }, that.OnClickPack);

                $(menu_item).find('.item_pack').on('focusin', that, (ev) => {
                    $(menu_item).find('.add_pack').css('visibility', 'visible');
                    //$(this).focus();
                });
                $(menu_item).find('.item_price').on('focusin', function (ev) {
                    $(menu_item).find('.add_pack').css('visibility', 'visible');
                    //$(this).focus();
                });

                $(menu_item).find('.gallery').attr('id', 'gallery_' + tab + '_' + i);

                $.each(offer.data[tab][i].cert, function (i, data) {
                    let img = new Image();
                    img.src = that.path+'/images/'+data.src;
                    //$(img).offset(data.pos);TODO:
                    img.height = '100';
                    $(menu_item).find('.gallery').append(img);
                    $(img).on('click', that.onClickCert);
                });


                $(menu_item).css('display', 'block');
                $('#' + tab).append(menu_item);//добавить продукт в закладку

                //$(tmplt).insertAfter('#offer_editor');

                if ($(menu_item).find('.item_content').css('display') == 'block'
                    && $(menu_item).find('.img-fluid').attr('src') === ''
                    && $(menu_item).find('.content_text').text() === "") {
                    $(menu_item).find('.item_content').slideToggle("fast");
                }

                $(menu_item).find('.add_picture').attr('id', 'ap_'  + tab + '_' + i);
                $(menu_item).find('.add_picture').on('click', this, function (ev) {
                    let menu_item = $(this).closest('.menu_item');
                    let vis = $(menu_item).find('.img-fluid').css('visibility');
                    if (vis === 'visible') {
                        $(menu_item).find('.img-fluid').css('visibility', 'hidden');
                    } else {
                        ev.target = $(menu_item).find('.img-fluid')[0];
                        that.OnClickImport(ev);
                        $(menu_item).find('.toolbar').insertAfter($(menu_item).find('.item_content'));
                    }
                });

                $(menu_item).find('.add_content').on('click touchstart', menu_item, function (ev) {
                    let menu_item = $(ev.data);
                    $(menu_item).find('.item_content').slideDown("slow");
                    let vis = $(this).closest('.menu_item').find('.content_text').css('visibility');
                    if (vis === 'visible') {
                        vis = 'hidden';
                    } else {
                        vis = 'visible';
                    }

                    $(menu_item).find('.content_text').css('visibility', vis);
                    $(menu_item).find('.content_text').focus();
                });

                $(menu_item).find('.add_cert').attr('id', 'ac_' + tab + '_' + i);
                $(menu_item).find('.add_cert').on('click', this, function (ev) {
                    let menu_item = $(this).closest('.menu_item');
                    ev.target = $(menu_item).find('.gallery')[0];
                    that.OnClickAddCert(ev);
                    $(menu_item).find('.toolbar').insertAfter($(menu_item).find('.item_content'));
                });

                $(menu_item).find('.orders').attr('id', 'orders'  + tab + '_' + i);
                $(menu_item).find('.order_ctrl').attr('data-toggle', 'collapse');
                $(menu_item).find('.order_ctrl').attr('data-target', '#orders'  + tab +'_' + i)

                $(menu_item).find('.tablesorter').attr('id', 'ordtable_' + offer.data[tab][i].title);

                $('a[href="#' + tab + '"]').css('color', 'blue');
            }

            $('[href="#' + tab + '"]').on('show.bs.tab', function (ev) {
                if (ev.relatedTarget) {
                    //let items = that.getTabItems($(ev.relatedTarget).text(), window.sets.lang);
                    //window.user.UpdateOfferLocal($(ev.relatedTarget).text(), items, this.location, window.dict.dict, 'published');
                }
            });

            $('[href="#' + tab + '"]').on('hide.bs.tab', function (ev) {
                if (event.target) {
                    //let items = that.getTabItems($(ev.target).text(), window.sets.lang);
                    //window.user.UpdateOfferLocal($(ev.relatedTarget).text(), items, this.location, window.dict.dict, this.status);
                }
            });
        }

        $('.item_content').on('shown.bs.collapse', function (e) {
            $(this).find('.content').off();
            $(this).find('.content').on( 'change keyup keydown paste cut', 'textarea', function (){
                $(this).height(0).height(this.scrollHeight);
            }).find( 'textarea' ).change();
        });

        $($('.tab_inserted a')[0]).tab('show');

        if(new Date(window.supplier.date).getDate()=== new Date().getDate()){
            $('.notoday').removeClass('notoday');
        }


        //
        this.lang = window.sets.lang;
        this.dict.set_lang(window.sets.lang,this.ovc);
        // $($(sp).find('[lang='+window.sets.lang+']')[0]).prop("selected", true).trigger('change');

        $('.close_browser').off('click touchstart');
        $('.close_browser').on('click touchstart', this,  that.CloseMenu);

    }

    onClickCert(ev) {
        ev.preventDefault();
        ev.stopPropagation();
        if(!$(this).attr('height'))
            $(this).attr('height','100');
        else {
            //$(this).attr('height','600');
            $(this).removeAttr('height');
        }
        return false;
    };

    OnClickPack(ev){
        let menu_item = ev.data.mi;
        let that = ev.data.that;
        let packlist = JSON.parse($(menu_item).find('.item_pack').attr('packlist'));
        let markuplist = JSON.parse($(menu_item).find('.item_markup').attr('markuplist'));

        $(menu_item).find('.item_price').val(packlist[$(ev.target).text()]);
        if(markuplist)
            $(menu_item).find('.item_markup').val(markuplist[$(ev.target).text()]);

        if(!markuplist[$(ev.target).text()]|| !packlist[$(ev.target).text()]){
            $(menu_item).find('.item_total').val('');
        }else {
            $(menu_item).find('.item_total').val(markuplist[$(ev.target).text()] + packlist[$(ev.target).text()]);
        }
        that.changed = true;
        // let price = pl[$(ev.target).text()];
        $(menu_item).find('.item_pack').text($(ev.target).text());
        $(menu_item).find('.item_pack').attr('pack',$(ev.target).text());
        // $(menu_item).find('.item_price').val(price);

    }

    MakeDraggable(el){
        $(el).draggable({
            start: function () {
                console.log("drag start");
            },
            drag: function () {
                return false;//$(el).attr('drag', true);
            },
            stop: function () {
                // var rel_x = parseInt($(el).position().left / window.innerWidth * 100);
                // $(el).css('right', rel_x + '%');
                // var rel_y = parseInt($(el).position().top / window.innerHeight * 100);
                // $(el).css('bottom', rel_y + '%');
            }
        });
    }

    OnChangeLang(ev) {
        ev.preventDefault(); // avoid to execute the actual submit of the form.
        ev.stopPropagation();
        let menu = ev.data;
        menu.SaveOffer(ev,window.supplier.menu.lang);

        let sel_lang = $('.sp_dlg option:selected').val().toLowerCase().substring(0, 2);

        window.dict.Translate('en',sel_lang, function () {
            window.dict.set_lang(sel_lang, $("#offer_viewer"));
            window.user.menu.lang = sel_lang;
        });
    }



    CloseMenu(ev) {
        let that = ev.data;
        //if(ev.data.changed)
        let items = that.SaveOffer(ev,window.sets.lang);

        that.ovc.remove();
    }

    GetOfferItems(lang){
        let that = this;
        let offerObj = {local:{}, remote:{}};
        that.arCat = [];

        $('.item_title').trigger('click');

        $(that.ovc).find('.div_tab_inserted').each((index, val)=> {

            $(val).addClass('active');
            let tab = $(val).attr('id');
            let value = $('a[href="#'+tab+'"]')[0].value;
            let cat;
            if(value) {
                cat = $('.category[title="'+value+'"]').attr('id');
                if(!cat)
                    cat='1000';
                that.arCat.push(parseInt(cat));

                if(!window.dict.dict[md5(value)]){
                    window.dict.dict[md5(value)] = {};
                }
                window.dict.dict[md5(value)][lang] = value;
            }else{
                $(val).empty();
                return true;
            }

            let miAr = $(val).find('.menu_item');
            offerObj['local'][value] = [];
            offerObj['remote'][value] = [];
            for (let i = 0; i < miAr.length; i++) {

                let item = {};
                item.checked = that.offer.data[tab][i].checked;//from offer
                let checked = JSON.stringify($(miAr[i]).find(':checkbox').prop('checked'));

                let title = $(miAr[i]).find('.item_title');
                let key = $(title).attr('data-translate');
                let text = $(miAr[i]).find('.item_title').val();

                if (text.length === 0 || !text.trim())
                    continue;
                if(!window.dict.dict[key]) {
                    window.dict.dict[key] = {};
                }

                if (text !== window.dict.dict[key][lang]) {
                    let obj = Object.assign({},window.dict.dict[key]);
                    delete window.dict.dict[key];
                    key = md5(text);
                    window.dict.dict[key] = obj;
                    window.dict.dict[key][lang] = text;
                    $(title).attr('data-translate',key);
                }
                item.title = key;

                if($(miAr[i]).find('.content_text').css('visibility')==='visible') {
                    let cont_text = $(miAr[i]).find('.content_text');
                    let w = $(cont_text).width();
                    let h = $(cont_text).height();
                    let l = $(cont_text).css('left');
                    let ofs = $(cont_text).offset();
                    key = $(cont_text).attr('data-translate');
                    text = $(cont_text).text().replace(/'/g,'%27').replace(/\n/g,'%0D').replace(/"/g,'%22');
                    if(!window.dict.dict[key]) {
                        window.dict.dict[key] = {};
                    }
                    if (text !== window.dict.dict[key][lang]) {
                        let obj = Object.assign({},window.dict.dict[key]);
                        //delete window.dict.dict[key];
                        key = md5(text);
                        window.dict.dict[key] = obj;
                        window.dict.dict[key][lang] = text;
                        $(cont_text).attr('data-translate',key);
                    }
                    item.content_text = {value:key};
                    item.content_text.width = w;
                    item.content_text.height = h;
                    item.content_text.left = l;

                }else{
                    if(item.content)
                        delete item.content;
                }
                item.width = $(miAr[i]).width()>0?$(miAr[i]).width():$(that.ovc).width();

                if($(miAr[i]).find('.img-fluid').css('visibility')==='visible') {
                    item.img = {src:$(miAr[i]).find('.img-fluid').attr('hash')};
                }else {
                    delete item.img;
                }

                item.markuplist = $(miAr[i]).find('.item_markup').attr('markuplist');

                if(item.markuplist) {
                    item.markuplist = JSON.parse(item.markuplist);
                }else{
                    item.price = $(miAr[i]).find('.item_price').text();
                    if(!item.price)
                        continue;
                }

                if(_.isEmpty(item.markuplist))
                    continue;
                item.cert = [];
                $.each($(miAr[i]).find('.gallery').children(), function (i, el) {
                    item.cert.push({src:el.src,pos:$(el).position()});
                });

                item.owner = $(miAr[i]).attr('owner');
                if(!item.owner)
                    continue;


                if(checked==='true') {
                    offerObj['local'][value].push(item);
                }

            }
            if(offerObj['remote'][value].length==0)
                delete offerObj['remote'][value];
            if(offerObj['local'][value].length==0)
                delete offerObj['local'][value];
        });

        return offerObj;
    }

    SaveOffer(ev, lang) {

        let ind = $("li.tab_inserted.active").val();
        let active = $($("li.active").find('a')[ind]).text();
        let items  = this.GetOfferItems(lang,ind);

        window.user.UpdateDeliverOfferLocal(this.offer, items['local'], window.dict.dict);
        return items;
    }

    OnMessage(data){//TODO:
        if(data.func ==='ordered'){
            data.order.date = new Date(data.order.date.split('T')[0]);


        }
        if(data.func ==='sharelocation'){
            let loc = data.location;

        }

    }
}


